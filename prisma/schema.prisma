generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  name      String
  lastName  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      Role      @default(USER)
  bookings  Booking[]

  @@map("users")
}

model CarForRent {
  id           String    @id @default(cuid())
  brand        String
  model        String
  year         Int
  description  String
  transmission String
  fuelType     String
  type         CarType
  seats        Int
  doors        Int
  price        Float
  image        String[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  bookings     Booking[]

  @@index([type])
  @@map("cars_for_rent")
}

model Booking {
  id                    String        @id @default(cuid())
  userId                String
  carId                 String
  paid                  Boolean       @default(false)
  startDate             DateTime
  endDate               DateTime
  durationDays          Int
  totalPrice            Float
  stripeSessionId       String        @unique
  stripePaymentIntentId String        @unique
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  status                BookingStatus @default(PENDING)
  timeZone              String?
  reminderAt            DateTime?
  reminderSentAt        DateTime?
  stripeInvoiceUrl      String?
  stripeReceiptUrl      String?
  stripeCustomerId      String?       @unique
  car                   CarForRent    @relation(fields: [carId], references: [id])
  user                  User          @relation(fields: [userId], references: [id])

  @@index([stripePaymentIntentId])
  @@index([status])
  @@index([createdAt])
  @@index([startDate, endDate])
}

enum Role {
  USER
  ADMIN
}

enum CarType {
  SEDAN
  SUV
  TRUCK
  COUPE
  CONVERTIBLE
  HATCHBACK
  MINIVAN
  WAGON
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
